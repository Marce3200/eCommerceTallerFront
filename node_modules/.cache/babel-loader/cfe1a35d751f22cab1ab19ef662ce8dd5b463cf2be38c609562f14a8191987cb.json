{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = process.env.REACT_APP_API_URL;\nconst addProduct_API = async (nombre, descripcion, stock, status, precio, url) => {\n  const datos = {\n    name: nombre,\n    description: descripcion,\n    status: status,\n    stock: stock,\n    price: precio,\n    img: url\n  };\n  try {\n    const result = await axios.post(`${baseURL}/product/addProduct`, datos, {\n      withCredentials: true\n    });\n    return result;\n  } catch (error) {\n    return false;\n  }\n};\nconst agregarProducto = async (nombre, descripcion, stock, status, precio, url) => {\n  if (!nombre || !descripcion || !stock || !status || !precio || !url) {\n    return false;\n  }\n  const result = await addProduct_API(nombre, descripcion, stock, status, precio, url);\n  if (result) {\n    return true;\n  }\n  return false;\n};\nconst actualizarProducto = async (id, nombre, descripcion, stock, status, precio, url) => {\n  if (!id || !nombre || !descripcion || !stock || !status || !precio || !url) {\n    return false;\n  }\n  const result = await updateProduct_API(id, nombre, descripcion, stock, status, precio, url);\n  if (result) {\n    return true;\n  }\n  return false;\n};\nconst updateProduct_API = async (id, nombre, descripcion, stock, status, precio, url) => {\n  const datos = {\n    id: id,\n    name: nombre,\n    description: descripcion,\n    status: status,\n    stock: stock,\n    price: precio,\n    img: url\n  };\n  try {\n    const result = await axios.put(`${baseURL}/product/update/${id}`, datos, {\n      withCredentials: true\n    });\n    return result;\n  } catch (error) {\n    return false;\n  }\n};\nexport { agregarProducto, actualizarProducto };","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_URL","addProduct_API","nombre","descripcion","stock","status","precio","url","datos","name","description","price","img","result","post","withCredentials","error","agregarProducto","actualizarProducto","id","updateProduct_API","put"],"sources":["/Users/marcelaquezada/workspace/eCommerce frontend/src/services/product.service.js"],"sourcesContent":["import axios from \"axios\";\n\nconst baseURL = process.env.REACT_APP_API_URL;\n\nconst addProduct_API = async (\n  nombre,\n  descripcion,\n  stock,\n  status,\n  precio,\n  url\n) => {\n  const datos = {\n    name: nombre,\n    description: descripcion,\n    status: status,\n    stock: stock,\n    price: precio,\n    img: url,\n  };\n  try {\n    const result = await axios.post(`${baseURL}/product/addProduct`, datos, {\n      withCredentials: true,\n    });\n    return result;\n  } catch (error) {\n    return false;\n  }\n};\nconst agregarProducto = async (\n  nombre,\n  descripcion,\n  stock,\n  status,\n  precio,\n  url\n) => {\n  if (!nombre || !descripcion || !stock || !status || !precio || !url) {\n    return false;\n  }\n\n  const result = await addProduct_API(\n    nombre,\n    descripcion,\n    stock,\n    status,\n    precio,\n    url\n  );\n\n  if (result) {\n    return true;\n  }\n  return false;\n};\n\nconst actualizarProducto = async (\n  id,\n  nombre,\n  descripcion,\n  stock,\n  status,\n  precio,\n  url\n) => {\n  if (!id || !nombre || !descripcion || !stock || !status || !precio || !url) {\n   \n    return false;\n    \n  }\n\n  const result = await updateProduct_API(\n    id,\n    nombre,\n    descripcion,\n    stock,\n    status,\n    precio,\n    url\n  );\n\n  if (result) {\n  \n \n    return true;\n  }\n  \n  return false;\n};\n\nconst updateProduct_API = async (\n  id,\n  nombre,\n  descripcion,\n  stock,\n  status,\n  precio,\n  url\n) => {\n  const datos = {\n    id:id,\n    name: nombre,\n    description: descripcion,\n    status: status,\n    stock: stock,\n    price: precio,\n    img: url,\n  };\n  try {\n    const result = await axios.put(`${baseURL}/product/update/${id}`, datos, {\n      withCredentials: true,\n    });\n    return result;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport { agregarProducto, actualizarProducto };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,MAAMC,cAAc,GAAG,OACrBC,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,GAAG,KACA;EACH,MAAMC,KAAK,GAAG;IACZC,IAAI,EAAEP,MAAM;IACZQ,WAAW,EAAEP,WAAW;IACxBE,MAAM,EAAEA,MAAM;IACdD,KAAK,EAAEA,KAAK;IACZO,KAAK,EAAEL,MAAM;IACbM,GAAG,EAAEL;EACP,CAAC;EACD,IAAI;IACF,MAAMM,MAAM,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAE,GAAEjB,OAAQ,qBAAoB,EAAEW,KAAK,EAAE;MACtEO,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOF,MAAM;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AACD,MAAMC,eAAe,GAAG,OACtBf,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,GAAG,KACA;EACH,IAAI,CAACL,MAAM,IAAI,CAACC,WAAW,IAAI,CAACC,KAAK,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM,IAAI,CAACC,GAAG,EAAE;IACnE,OAAO,KAAK;EACd;EAEA,MAAMM,MAAM,GAAG,MAAMZ,cAAc,CACjCC,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,GAAG,CACJ;EAED,IAAIM,MAAM,EAAE;IACV,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AAED,MAAMK,kBAAkB,GAAG,OACzBC,EAAE,EACFjB,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,GAAG,KACA;EACH,IAAI,CAACY,EAAE,IAAI,CAACjB,MAAM,IAAI,CAACC,WAAW,IAAI,CAACC,KAAK,IAAI,CAACC,MAAM,IAAI,CAACC,MAAM,IAAI,CAACC,GAAG,EAAE;IAE1E,OAAO,KAAK;EAEd;EAEA,MAAMM,MAAM,GAAG,MAAMO,iBAAiB,CACpCD,EAAE,EACFjB,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,GAAG,CACJ;EAED,IAAIM,MAAM,EAAE;IAGV,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC;AAED,MAAMO,iBAAiB,GAAG,OACxBD,EAAE,EACFjB,MAAM,EACNC,WAAW,EACXC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,GAAG,KACA;EACH,MAAMC,KAAK,GAAG;IACZW,EAAE,EAACA,EAAE;IACLV,IAAI,EAAEP,MAAM;IACZQ,WAAW,EAAEP,WAAW;IACxBE,MAAM,EAAEA,MAAM;IACdD,KAAK,EAAEA,KAAK;IACZO,KAAK,EAAEL,MAAM;IACbM,GAAG,EAAEL;EACP,CAAC;EACD,IAAI;IACF,MAAMM,MAAM,GAAG,MAAMjB,KAAK,CAACyB,GAAG,CAAE,GAAExB,OAAQ,mBAAkBsB,EAAG,EAAC,EAAEX,KAAK,EAAE;MACvEO,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOF,MAAM;EACf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF,CAAC;AAED,SAASC,eAAe,EAAEC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}